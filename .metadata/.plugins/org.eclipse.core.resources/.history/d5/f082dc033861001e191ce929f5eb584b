/*
 * led_matrix.c
 *
 *  Created on: Oct 2, 2023
 *      Author: Acer
 */

#include "led_matrix.h"
#include "main.h"

const int MAX_LED_MATRIX = 8;
int index_led_matrix = 0;
uint8_t matrix_buffer[8] = {0x00, 0xE0, 0xD8, 0xA3, 0xA3, 0xD8, 0xE0, 0x00};
//uint8_t matrix_buffer[8] = {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00};

GPIO_TypeDef *gpioPortB = GPIOB;

int matrix_count = 0;

void updateLEDMatrix(int index){

    switch (index){
        case 0:
        	HAL_GPIO_WritePin(ENM0_GPIO_Port, ENM0_Pin, 0);
        	HAL_GPIO_WritePin(ENM1_GPIO_Port, ENM1_Pin, 1);
        	HAL_GPIO_WritePin(ENM2_GPIO_Port, ENM2_Pin, 1);
        	HAL_GPIO_WritePin(ENM3_GPIO_Port, ENM3_Pin, 1);
        	HAL_GPIO_WritePin(ENM4_GPIO_Port, ENM4_Pin, 1);
        	HAL_GPIO_WritePin(ENM5_GPIO_Port, ENM5_Pin, 1);
        	HAL_GPIO_WritePin(ENM6_GPIO_Port, ENM6_Pin, 1);
        	HAL_GPIO_WritePin(ENM7_GPIO_Port, ENM7_Pin, 1);

        	HAL_GPIO_WritePin(GPIOB, ROW2_Pin|ROW3_Pin|ROW4_Pin|ROW5_Pin|ROW6_Pin
        	                          |ROW7_Pin|ROW0_Pin|ROW1_Pin, matrix_buffer[0]);
            break;
        case 1:
        	HAL_GPIO_WritePin(ENM0_GPIO_Port, ENM0_Pin, 1);
			HAL_GPIO_WritePin(ENM1_GPIO_Port, ENM1_Pin, 0);
			HAL_GPIO_WritePin(ENM2_GPIO_Port, ENM2_Pin, 1);
			HAL_GPIO_WritePin(ENM3_GPIO_Port, ENM3_Pin, 1);
			HAL_GPIO_WritePin(ENM4_GPIO_Port, ENM4_Pin, 1);
			HAL_GPIO_WritePin(ENM5_GPIO_Port, ENM5_Pin, 1);
			HAL_GPIO_WritePin(ENM6_GPIO_Port, ENM6_Pin, 1);
			HAL_GPIO_WritePin(ENM7_GPIO_Port, ENM7_Pin, 1);

//			gpioPortB->ODR &= ~(matrix_buffer[1] << 8); // Xóa dữ liệu cũ của PB8-PA15
			gpioPortB->ODR |= (matrix_buffer[1] << 8); // Gán giá trị hex cho PB8-PB15
            break;
        case 2:
        	HAL_GPIO_WritePin(ENM0_GPIO_Port, ENM0_Pin, 1);
			HAL_GPIO_WritePin(ENM1_GPIO_Port, ENM1_Pin, 1);
			HAL_GPIO_WritePin(ENM2_GPIO_Port, ENM2_Pin, 0);
			HAL_GPIO_WritePin(ENM3_GPIO_Port, ENM3_Pin, 1);
			HAL_GPIO_WritePin(ENM4_GPIO_Port, ENM4_Pin, 1);
			HAL_GPIO_WritePin(ENM5_GPIO_Port, ENM5_Pin, 1);
			HAL_GPIO_WritePin(ENM6_GPIO_Port, ENM6_Pin, 1);
			HAL_GPIO_WritePin(ENM7_GPIO_Port, ENM7_Pin, 1);

//			gpioPortB->ODR &= ~(matrix_buffer[2] << 8); // Xóa dữ liệu cũ của PB8-PA15
			gpioPortB->ODR |= (matrix_buffer[2] << 8); // Gán giá trị hex cho PB8-PB15
            break;
        case 3:
        	HAL_GPIO_WritePin(ENM0_GPIO_Port, ENM0_Pin, 1);
			HAL_GPIO_WritePin(ENM1_GPIO_Port, ENM1_Pin, 1);
			HAL_GPIO_WritePin(ENM2_GPIO_Port, ENM2_Pin, 1);
			HAL_GPIO_WritePin(ENM3_GPIO_Port, ENM3_Pin, 0);
			HAL_GPIO_WritePin(ENM4_GPIO_Port, ENM4_Pin, 1);
			HAL_GPIO_WritePin(ENM5_GPIO_Port, ENM5_Pin, 1);
			HAL_GPIO_WritePin(ENM6_GPIO_Port, ENM6_Pin, 1);
			HAL_GPIO_WritePin(ENM7_GPIO_Port, ENM7_Pin, 1);

//			gpioPortB->ODR &= ~(matrix_buffer[3] << 8); // Xóa dữ liệu cũ của PB8-PA15
			gpioPortB->ODR |= (matrix_buffer[3] << 8); // Gán giá trị hex cho PB8-PB15
            break;
        case 4:
        	HAL_GPIO_WritePin(ENM0_GPIO_Port, ENM0_Pin, 1);
			HAL_GPIO_WritePin(ENM1_GPIO_Port, ENM1_Pin, 1);
			HAL_GPIO_WritePin(ENM2_GPIO_Port, ENM2_Pin, 1);
			HAL_GPIO_WritePin(ENM3_GPIO_Port, ENM3_Pin, 1);
			HAL_GPIO_WritePin(ENM4_GPIO_Port, ENM4_Pin, 0);
			HAL_GPIO_WritePin(ENM5_GPIO_Port, ENM5_Pin, 1);
			HAL_GPIO_WritePin(ENM6_GPIO_Port, ENM6_Pin, 1);
			HAL_GPIO_WritePin(ENM7_GPIO_Port, ENM7_Pin, 1);

//			gpioPortB->ODR &= ~(matrix_buffer[4] << 8); // Xóa dữ liệu cũ của PB8-PA15
			gpioPortB->ODR |= (matrix_buffer[4] << 8); // Gán giá trị hex cho PB8-PB15
            break;
        case 5:
        	HAL_GPIO_WritePin(ENM0_GPIO_Port, ENM0_Pin, 1);
			HAL_GPIO_WritePin(ENM1_GPIO_Port, ENM1_Pin, 1);
			HAL_GPIO_WritePin(ENM2_GPIO_Port, ENM2_Pin, 1);
			HAL_GPIO_WritePin(ENM3_GPIO_Port, ENM3_Pin, 1);
			HAL_GPIO_WritePin(ENM4_GPIO_Port, ENM4_Pin, 1);
			HAL_GPIO_WritePin(ENM5_GPIO_Port, ENM5_Pin, 0);
			HAL_GPIO_WritePin(ENM6_GPIO_Port, ENM6_Pin, 1);
			HAL_GPIO_WritePin(ENM7_GPIO_Port, ENM7_Pin, 1);

//			gpioPortB->ODR &= ~(matrix_buffer[5] << 8); // Xóa dữ liệu cũ của PB8-PA15
			gpioPortB->ODR |= (matrix_buffer[5] << 8); // Gán giá trị hex cho PB8-PB15
            break;
        case 6:
        	HAL_GPIO_WritePin(ENM0_GPIO_Port, ENM0_Pin, 1);
			HAL_GPIO_WritePin(ENM1_GPIO_Port, ENM1_Pin, 1);
			HAL_GPIO_WritePin(ENM2_GPIO_Port, ENM2_Pin, 1);
			HAL_GPIO_WritePin(ENM3_GPIO_Port, ENM3_Pin, 1);
			HAL_GPIO_WritePin(ENM4_GPIO_Port, ENM4_Pin, 1);
			HAL_GPIO_WritePin(ENM5_GPIO_Port, ENM5_Pin, 1);
			HAL_GPIO_WritePin(ENM6_GPIO_Port, ENM6_Pin, 0);
			HAL_GPIO_WritePin(ENM7_GPIO_Port, ENM7_Pin, 1);

//			gpioPortB->ODR &= ~(matrix_buffer[6] << 8); // Xóa dữ liệu cũ của PB8-PA15
			gpioPortB->ODR |= (matrix_buffer[6] << 8); // Gán giá trị hex cho PB8-PB15
            break;
        case 7:
        	HAL_GPIO_WritePin(ENM0_GPIO_Port, ENM0_Pin, 1);
			HAL_GPIO_WritePin(ENM1_GPIO_Port, ENM1_Pin, 1);
			HAL_GPIO_WritePin(ENM2_GPIO_Port, ENM2_Pin, 1);
			HAL_GPIO_WritePin(ENM3_GPIO_Port, ENM3_Pin, 1);
			HAL_GPIO_WritePin(ENM4_GPIO_Port, ENM4_Pin, 1);
			HAL_GPIO_WritePin(ENM5_GPIO_Port, ENM5_Pin, 1);
			HAL_GPIO_WritePin(ENM6_GPIO_Port, ENM6_Pin, 1);
			HAL_GPIO_WritePin(ENM7_GPIO_Port, ENM7_Pin, 0);

//			gpioPortB->ODR &= ~(matrix_buffer[7] << 8); // Xóa dữ liệu cũ của PB8-PA15
			gpioPortB->ODR |= (matrix_buffer[7] << 8); // Gán giá trị hex cho PB8-PB15
            break;
        default:
            break;
    }
}
